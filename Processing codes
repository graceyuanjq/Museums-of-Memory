/* Interactive installation Museums of Memory
by Grace Yuan
OCAD University, Digital Futures, DIGF 6037 Creation and Computation
October 2020
based on processing ArrayObject example
https://processing.org/examples/arrayobjects.html
also based on "ReadAllPins" example from instructors Kate Hartman and Nick Puckett 
*/
import processing.serial.*; 
import processing.video.*;
import processing.sound.*;
SoundFile sound1;
Serial myPort;              
int totalPins =12;
int pinValues[] = new int[totalPins];
int pinValuesPrev[] = new int[totalPins];
int unit = 40;
int count;
Module[] mods;
PFont title, name;
int gameScreen=0;
Movie asset1,asset2,asset3,asset4, asset5;
PImage houses, museum1, museum2, museum3;
PImage human1, hand, asset6, asset7, asset8, asset9, asset10, asset11, asset12, asset13;
float handX=width/2;
float handY=height/2;

void setup() {
  fullScreen();
  myPort = new Serial(this, "/dev/cu.usbmodem14101", 9600);
  myPort.bufferUntil('\n');
  houses = loadImage("3houses white lines.png");
  human1 = loadImage("human.png");
  hand = loadImage("hand.png");
  museum1 = loadImage("museum1.png");
  museum2 = loadImage("museum2.png");
  int wideCount = width / unit;
  int highCount = height / unit;
  count = wideCount * highCount;
  mods = new Module[count];
  title = createFont("GrenzeGotisch-VariableFont_wght.ttf",50);
  name=createFont("AbrilFatface-Regular.ttf",30);
  asset1=new Movie(this, "asset1.mov");
  asset1.loop();
  asset2=new Movie(this, "asset2.mov");
  asset2.loop();
  asset3=new Movie(this, "asset3.mov");
  asset3.loop();
  asset4=new Movie(this, "asset4.mov");
  asset4.loop();
  asset5=new Movie(this, "asset5.mov");
  asset5.loop();
  asset6 = loadImage("asset6.png");  
  asset7 = loadImage("asset7.png");
  asset8 = loadImage("asset8.png");
  asset9 = loadImage("asset9.png");
  asset10 = loadImage("asset10.png");
  asset11 = loadImage("asset11.png");
  asset12 = loadImage("asset12.png");
  asset13 = loadImage("asset13.png");
  int index = 0;
  for (int y = 0; y < highCount; y++) {
    for (int x = 0; x < wideCount; x++) {
      mods[index++] = new Module(x*unit, y*unit, unit/2, unit/2, random(0.05, 0.8), unit);
    }
  }
  sound1 = new SoundFile(this, "Bitcoin_Day.mp3");
  sound1.loop();
}


void draw() {
  if (pinValues[11]==1){
    if (gameScreen!=1) {
      gameScreen=1;
    } else if (gameScreen==1){
      gameScreen=0;
    }
  }
  if (pinValues[10]==1){
    if (gameScreen!=2) {
      gameScreen=2;
    }else if (gameScreen==2){
      gameScreen=0;
    }
  } 
  if (pinValues[9]==1){
    if (gameScreen!=3) {
      gameScreen=3;
    }else if (gameScreen==3){
      gameScreen=0;
    }
  } 
  if (pinValues[8]==1){
    if (gameScreen!=0) {
      gameScreen=0;
    }
  } 

  if (gameScreen == 0) {
    initScreen();
  } else if (gameScreen == 1) {
    gameScreen1();
  } else if (gameScreen == 2) {
    gameScreen2();
  } else if (gameScreen == 3) {
    gameScreen3();
  }
}

void initScreen() {
  background(0);
  for (Module mod : mods) {
    mod.update();
    mod.display1();
  }
  image(houses,0,-100,width,height);
  image(human1,width/2-200,100,400,500);
  textFont(title);
  fill(255);
  textAlign(CENTER, TOP);
  textSize(100);
  text("Museums of Memory", width/2, height/2-140); 
  textSize(20);
  textFont(name);
  text("By Grace Yuan", width/2, height-70);
  
}

void gameScreen1(){
  background(0);
  stroke(255);
  strokeWeight(2);
  image(asset4,width/2,-250,600,600);
  image(asset12,-40,50,600,1000);
  image(asset12,width-500,180,500,900);
  image(asset12,width-700,500,300,500);
  image(asset3, width/2-400, 300, 300,600);
  line(0,height,width/2, height-200);
  line(width,height,width/2, height-200);
  line(width/2,0,width/2,height-200);
  for (Module mod : mods) {
    mod.update();
    mod.display2();
  }
  image(asset10,width/2,250,350,300);
  handController();
  if ((handX>width/2-400) & (handX<width/2-350) & (handY>300) & (handY<650)){
    asset3.play();
  } else {
    asset3.stop();
  }
}

void gameScreen2(){
  background(0);
  image(asset1, 400, 100, 700,700);
  image(asset5, width-600, 300, 360,360);
  image(museum1,0,0,width,height);
  image(asset6, width-520, 330, 450, 725);
  image(asset7, 100, 250, 500, 500);
  image(asset8, 1150, 200, 530, 80);
  for (Module mod : mods) {
    mod.update();
    mod.display2();
  }
  handController();
  if ((handX>400) & (handX<850) & (handY>100) & (handY<550)){
    asset1.play();
  } else {
    asset1.stop();
  }
  if ((handX>width-600) & (handX<width-260) & (handY>300) & (handY<410)){
    asset5.play();
  } else {
    asset5.stop();
  }
}

void gameScreen3(){
  background(0);
  image(asset2, width/2-300, 300, 350,350);
  image(museum2,0,0,width,height);
  for (Module mod : mods) {
    mod.update();
    mod.display2();
  }
  image(asset9, 1150, 250, 620, 80);
  image(asset13, 600, 800, 1000, 250);
  image(asset11,100,350,400,640);
  handController();
  if ((handX>width/2-300) & (handX<width/2-200) & (handY>300) & (handY<400)){
    asset2.play();
  } else {
    asset2.stop();
  }
}


void serialEvent(Serial myPort) {
  String myString = myPort.readStringUntil('\n');
  if (myString != null) {
    myString = trim(myString);
    pinValues = int(split(myString,','));
  }
}

void handController(){
  if (pinValues[1]==1){  
    if (handX<width-250 & handX>=0){
      handX+=40;
    } else if(handX>=width-250){
      handX-=40;
    }
  } 
  if (pinValues[2]==1){  
    if (handX<=width-250 & handX>0){
      handX-=40;
    } else if (handX<=0){
      handX+=40;
    }
  } 
  if (pinValues[3]==1){  
    if (handY<height-250 & handY>=0){
      handY+=40;
    } else if (handY>=height-250){
      handY-=40;
    }
  } 
  if (pinValues[4]==1){  
    if (handY<=height-250 & handY>0){
      handY-=40;
    } else if(handY<=0){
      handY+=40;
    }
  }
 
  image(hand,handX,handY,250,250);
}

class Module {
  int xOffset;
  int yOffset;
  float x, y;
  int unit;
  int xDirection = 1;
  int yDirection = 1;
  float speed; 
  
  Module(int xOffsetTemp, int yOffsetTemp, int xTemp, int yTemp, float speedTemp, int tempUnit) {
    xOffset = xOffsetTemp;
    yOffset = yOffsetTemp;
    x = xTemp;
    y = yTemp;
    speed = speedTemp;
    unit = tempUnit;
  }
  
  void update() {
    x = x + (speed * xDirection);
    if (x >= unit || x <= 0) {
      xDirection *= -1;
      x = x + (1 * xDirection);
      y = y + (1 * yDirection);
    }
    if (y >= unit || y <= 0) {
      yDirection *= -1;
      y = y + (1 * yDirection);
    }
  }
  
  void display1() {
    fill(176,52,255);
    stroke(176,52,255);
    ellipse(xOffset + x, yOffset + y, 1 ,1);
  }
  void display2() {
    stroke(100,100,200);
    ellipse(xOffset + x, yOffset + y, 1,1);
  }
}

void movieEvent(Movie m) {
  m.read();
}
